
name: api-ci

on:
  push:
    branches: [master]
    paths:
      - "api/**"
  pull_request:
    branches: [master]
    paths:
      - "api/**"    
jobs: 
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build api
        run: docker-compose up -d api
      - name: Run test
        run: docker-compose run api python manage.py test
  coverage:
    runs-on: ubuntu-latest
    name: coverage
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.7
    - name: Build api
      run: docker-compose up --build -d api
    - name: Test api
      run: docker-compose run api coverage run manage.py test
    - name: Generate coverage report
      run: docker-compose run api coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: 8222df19-19f2-4059-ae71-c08ede5da326
        directory: ${{github.workspace}}/**
        flags: unittests
        fail_ci_if_error: true
        verbose: true
  sonarcloud-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.4
        with:
          projectBaseDir: api
        env:
          SONAR_TOKEN: be937845fd108c66d46c654c77faf77b0372dbc7
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    needs: [ build_and_test,sonarcloud-analysis ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy docker container to heroku.
        uses: gonuit/heroku-docker-deploy@v1.3.2
        with:
          email: lucasleitemm@hotmail.com
          heroku_api_key: 8e7f1b76-ec11-4159-a122-310395c37a29
          heroku_app_name: gces-api2
          dockerfile_directory: ./api/
          dockerfile_name: Dockerfile
          docker_options: "--no-cache"
          process_type: web
