# This is a basic workflow to help you get started with Actions

name: client ci

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths:
     - "client/**"
  pull_request:
    branches: [ master ]
    paths:
     - "client/**"
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build client
        run: docker-compose up -d client
      - name: Run tests
        run: docker-compose run client quasar test --unit jest
  coverage:
    needs: [ build_and_test ]
    runs-on: ubuntu-latest
    name: coverage
    steps:
    - uses: actions/checkout@master
    - uses: paambaati/codeclimate-action@v2.7.5
      env:
        CC_TEST_REPORTER_ID: 806251845d79d7472d90d5efaae94b54a4ee5adc159386813d99563eb86c2468
      with:
        coverageLocations: ${{github.workspace}}/client/*
  sonarcloud-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.4
        with:
          projectBaseDir: client
        env:
          SONAR_TOKEN: be937845fd108c66d46c654c77faf77b0372dbc7
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy docker container to heroku.
        uses: gonuit/heroku-docker-deploy@v1.3.2
        with:
          email: lucasleitemm@hotmail.com
          heroku_api_key: 8e7f1b76-ec11-4159-a122-310395c37a29
          heroku_app_name: gces-client
          dockerfile_directory: ./client/
          dockerfile_name: Dockerfile.Prod
          docker_options: "--no-cache"
          process_type: web         
